{"version":3,"sources":["App.js","reportWebVitals.js","index.js","proto/service_pb.js","proto/service_grpc_web_pb.js"],"names":["client","PingPongClient","App","useState","status","setStatus","pingCounter","setPingCounter","serverPings","setServerPings","useEffect","interval","setInterval","pingRequest","PingRequest","ping","metadata","err","response","pong","toObject","prevPingCounter","ok","on","sendPing","clearInterval","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","jspb","require","goog","global","exportSymbol","proto","main","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","PongResponse","GENERATE_TO_OBJECT","prototype","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","getBooleanFieldWithDefault","value","readBool","setOk","f","getOk","writeBool","setProto3BooleanField","object","extend","exports","grpc","web","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","PingPongPromiseClient","methodDescriptor_PingPong_Ping","MethodDescriptor","MethodType","UNARY","request","callback","rpcCall","unaryCall","module"],"mappings":"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","file":"static/js/main.2c3c3cdd.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, {useState, useEffect } from 'react';\nimport { PingPongClient } from './proto/service_grpc_web_pb';\nimport { PingRequest } from './proto/service_pb';\n\n\n\n // We create a client that connects to the api\nvar client = new PingPongClient(\"http://localhost:8090\");\n\nfunction App() {\n  // Create a const named status and a function called setStatus\n  const [status, setStatus] = useState(false);\n  // create a const named pingCount \n  const [pingCounter, setPingCounter] = useState(0); \n  // serverPings is a counter for how many ping the server has\n  const [serverPings, setServerPings] = useState(0); \n  // sendPing is a function that will send a ping to the backend\n  const sendPing = () => {\n    var pingRequest = new PingRequest();\n    // use the client to send our pingrequest, the function that is passed\n    // as the third param is a callback. \n    var metadata;\n    // I store the request since we want to listen on metadata exchanges\n    var request = client.ping(pingRequest, metadata, function(err, response) {\n      // serialize the response to an object \n      var pong = response.toObject();\n      // set our JS clients ping counter to +1\n      setPingCounter(prevPingCounter => prevPingCounter +1);\n      // call setStatus to change the value of status\n      setStatus(pong.ok);\n    });\n    // lets bind a function to change the counter based on the metadata field\n    request.on('metadata', function(status) {\n      // pingCounts are stored in Metadata, and metadata is a key value map\n      setServerPings(status['ping-counts']);\n    })\n  }\n\n  useEffect(() => {\n    // Start a interval each 3 seconds which calls sendPing. \n    const interval = setInterval(() => sendPing(), 3000)\n    return () => {\n      // reset timer\n      clearInterval(interval);\n    }\n  },[status]);\n  \n  // we will return the HTML. Since status is a bool\n  // we need to + '' to convert it into a string\n  return (\n    <div className=\"App\">\n      <p>Status: {status + ''}</p><br/>\n      <p>Requests: This client has performed {pingCounter} out of {serverPings}</p>\n    </div>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// source: service.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.main.PingRequest', null, global);\ngoog.exportSymbol('proto.main.PongResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.main.PingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.main.PingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.main.PingRequest.displayName = 'proto.main.PingRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.main.PongResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.main.PongResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.main.PongResponse.displayName = 'proto.main.PongResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.main.PingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.main.PingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.main.PingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.main.PingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.main.PingRequest}\n */\nproto.main.PingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.main.PingRequest;\n  return proto.main.PingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.main.PingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.main.PingRequest}\n */\nproto.main.PingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.main.PingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.main.PingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.main.PingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.main.PingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.main.PongResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.main.PongResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.main.PongResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.main.PongResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.main.PongResponse}\n */\nproto.main.PongResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.main.PongResponse;\n  return proto.main.PongResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.main.PongResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.main.PongResponse}\n */\nproto.main.PongResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setOk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.main.PongResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.main.PongResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.main.PongResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.main.PongResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOk();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool ok = 1;\n * @return {boolean}\n */\nproto.main.PongResponse.prototype.getOk = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.main.PongResponse} returns this\n */\nproto.main.PongResponse.prototype.setOk = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.main);\n","/**\n * @fileoverview gRPC-Web generated client stub for main\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nconst proto = {};\nproto.main = require('./service_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.main.PingPongClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.main.PingPongPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.main.PingRequest,\n *   !proto.main.PongResponse>}\n */\nconst methodDescriptor_PingPong_Ping = new grpc.web.MethodDescriptor(\n  '/main.PingPong/Ping',\n  grpc.web.MethodType.UNARY,\n  proto.main.PingRequest,\n  proto.main.PongResponse,\n  /**\n   * @param {!proto.main.PingRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.main.PongResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.main.PingRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.main.PongResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.main.PongResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.main.PingPongClient.prototype.ping =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/main.PingPong/Ping',\n      request,\n      metadata || {},\n      methodDescriptor_PingPong_Ping,\n      callback);\n};\n\n\n/**\n * @param {!proto.main.PingRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.main.PongResponse>}\n *     Promise that resolves to the response\n */\nproto.main.PingPongPromiseClient.prototype.ping =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/main.PingPong/Ping',\n      request,\n      metadata || {},\n      methodDescriptor_PingPong_Ping);\n};\n\n\nmodule.exports = proto.main;\n\n"],"sourceRoot":""}